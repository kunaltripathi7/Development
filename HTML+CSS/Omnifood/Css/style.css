/**************************/
/* HEADER */
/**************************/

.header {
  display: flex;
  justify-content: space-between;
  background-color: #fdf2e9;
  align-items: center;

  /* fixing the height of the header so its easier to make it sticky afterwards ?? why ? */
  height: 9.6rem;
  padding: 0 4.8rem;
}
.logo-img {
  height: 2.2rem;
}

/**************************/
/* Navigation*/
/**************************/
.main-nav-list {
  display: flex;
  gap: 3.2rem;
  align-items: center;
  list-style: none;
}

/* styling an a tag framework: all 4 classes */
.main-nav-link:link,
.main-nav-link:visited {
  display: inline-block;
  text-decoration: none;
  color: #333;
  /* use transition using the hover effect */
  transition: all 0.3s;
  font-weight: 500;
  font-size: 1.8rem;
}

.main-nav-link:hover,
.main-nav-link:active {
  color: #cf711f;
}

.main-nav-link.nav-cta:link,
.main-nav-link.nav-cta:visited {
  display: inline-block;
  color: #fff;
  background-color: #e67e22;
  padding: 1.2rem 2.4rem;
  border-radius: 9px;
}

/* last btn of nav is cta as a norm || end selector --> reusable*/
.main-nav-link.nav-cta:hover,
.main-nav-link.nav-cta:active {
  background-color: #cf711f;
}

/**************************/
/* HERO SECTION */
/**************************/
.section-hero {
  /* keep updating the design system everytime using a design ele like color etc */
  background-color: #fdf2e9;
  padding: 4.8rem 0 9.6rem 0;
}

.hero {
  /* why grid -> to set size of cols, in flex u need to enclose it in a container */
  display: grid;
  max-width: 130rem;
  /* justify-content: center; it centers inside the container the outside is a body ele*/
  margin: 0 auto;
  grid-template-columns: 1fr 1fr;
  align-items: center;
  gap: 9.6rem;
  /* adding padding to not make content glued to sides */
  padding: 0 3.2rem;
}

.hero-description {
  font-size: 2rem;
  line-height: 1.6;
  margin-bottom: 4.8rem;
}

.hero-img {
  width: 100%;
}

/* make general styles btn--full should not contain any other prprty so it can be reused later in the page 
use helper class for margin right for reusing || use !important cuz we really need to apply the helper class effects
don't wanna use div & gap -> efficient way */

.delivered-meals {
  display: flex;
  align-items: center;
  gap: 1.6rem;
  /* for maintaining visual hierarchy -> color & spacing b/w components*/
  margin-top: 8rem;
}
.delivered-imgs {
  display: flex;
}
.delivered-text {
  font-size: 1.8rem;
  font-weight: 600;
}

/* use descendant selector for comfortability */
.delivered-imgs img {
  height: 4.8rem;
  width: 4.8rem;
  border-radius: 50%;
  /* negative margin overlaps the items */
  margin-right: -1.6rem;
  border: 3px solid #fdf2e9;
}
.delivered-imgs img:last-child {
  margin-right: 0;
}

/* contrast checker for visual hierarchy */
.delivered-text span {
  color: #cf711f;
  font-weight: 700;
}

/**************************/
/* HOW IT WORKS */
/**************************/

.section-how {
  padding: 9.6rem 0;
}

.step-number {
  font-size: 8.6rem;
  font-weight: 600;
  color: #ddd;
  margin-bottom: 1.2rem;
}

.step-description {
  font-size: 1.8rem;
  line-height: 1.8;
}

.step-img-box {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

.step-img {
  /* 50% to its container's width it needs to fit
  center it horizontally & vertically cuz when the text content inc it stays at top*/
  width: 35%;
}

.step-img-box::before,
.step-img-box::after {
  content: "";
  display: block;
  border-radius: 50%;
  position: absolute;
  /* not used flex to position this cuz we want the img & ele overlap */
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* can't add pseudo ele to imgs 
by pseudo ele it becomes the child of that container ele*/
.step-img-box::before {
  background-color: #fdf2e9;
  width: 60%;
  /* height: 60%; */
  /* if making a square/circle won't work by height -> trick give padding (its also defined on width) */
  padding-bottom: 60%;
  z-index: -1;
}

.step-img-box::after {
  width: 45%;
  padding-bottom: 45%;
  background-color: #fae5d3;
  z-index: -1;
}
/* BEFORE STYLING THE ELEMENT SEE IF IT CONTAINS THE STYLES THAT CAN BE REUSED LATER, CREATE A SEPERATE GENERIC CLASS 
Like everytime doing/adding something think whats the most efficient and short way*/
